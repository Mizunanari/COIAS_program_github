#!/bin/bash
#Timestamp: 2022/08/04 14:00 sugiura
##############################################################################
# 視野内にある既知天体のリスト作成・データ整形をし,
# 特に確定番号付き小惑星の精密位置をJPLに問い合わせる操作を統括するスクリプト.
# GUI COIASの軌道取得(確定番号)ボタンで叩かれるのはこれ.
# 1. searchB.pyで視野内の暗い既知天体を, searchB_AstMPC.pyで明るい既知天体を
#    それぞれAstMPC_dim.edbとAstMPC.edbから探し出してくる.
# 2. データ整形をして, 視野内の確定番号付き小惑星の確定番号の一覧をcand3.txtに,
#    視野内の仮符号小惑星の仮符号の一覧をcand4.txtに書き出す.
# 3. make_asteroid_name_list_in_the_field.py
#    precise_orbit_directories.txtに記載のディレクトリ以下に,
#    明るい既知小惑星の一覧を保存しておく. (レポートモードで弾くため)
#    また既知小惑星のMPC形式の名前と元の名前の一覧も保存する.(将来的に使いたいという野望)
# 4. getinfo_numbered2D.py
#    cand3.txtに記載の確定番号付き既知小惑星の詳細位置を問い合わせ,
#    その結果をprecise_orbit_directories.txtに記載のディレクトリ以下に保存する.
##############################################################################

set -o pipefail
echo prempsearchC-before begins 2>&1 | tee log.txt
. def_coias_data_path
echo $? 35 301 > error.txt

cat have_all_precise_orbits.txt 2>&1 | tee -a log.txt
echo $? 34 302 >> error.txt
echo; 2>&1 | tee -a log.txt
haveAllPreciseOrbits=$(cat have_all_precise_orbits.txt )
if [ "$haveAllPreciseOrbits" = "0" ]; then
    sed  s/\'//g "${COIASDATAPATH}/param/AstMPC_dim.edb" |sed -e '1,51d' > AstMPC_dim_tmp.edb 2>&1 | tee -a log.txt
    echo $? 34 303 >> error.txt
    
    sed  s/\'//g "${COIASDATAPATH}/param/AstMPC.edb" |sed -e '1,51d' > AstMPC_tmp.edb 2>&1 | tee -a log.txt
    echo $? 34 304 >> error.txt
    
    ## search known dim asteroids in the field and output to cand.txt
    searchB.py 2>&1 | tee -a log.txt
    
    ## search konwn bright asteroids in the field and output to cand_bright.txt
    searchB_AstMPC.py 2>&1 | tee -a log.txt
    
    ##merge
    cat cand_dim.txt cand_bright.txt > cand.txt 2>&1 | tee -a log.txt
    echo $? 34 307 >> error.txt
    
    ## remove a character "\" from cand.txt
    sed -e 's/\\//g' cand.txt > cand2.txt 2>&1 | tee -a log.txt
    echo $? 34 308 >> error.txt
    
    ## remove the asteroids whose magnitudes are larger than 30 mag (very faint asteroids)
    awk '$6<30 {print $0}' cand2.txt > cand2b.txt 2>&1 | tee -a log.txt
    echo $? 34 309 >> error.txt
    
    ## classify asteroids into two groups, numbered asteroids and those only having karifugo
    ## numbered (named) asteroids (2022.4.18 KS)
	awk -F" " '( $2 ~ /^[1-9]/ && $3 ~ /^[A-Z]/ && $3 !~ /[A-Z][A-Z][0-9]*/ && $3 != "P-L" && $3 != "T-1" && $3 != "T-2" && $3 != "T-3" ) || $3 ~ /[A-Z][A-Z][A-Z]/ {print $2}' cand2b.txt > cand3.txt 2>&1 | tee -a log.txt
    echo $? 34 310 >> error.txt
    ## numbered (unnamed) asteroids (2022.4.18 NM)
    awk -F" " '$2 ~ /^[1-9]/ && $3 ~ /^[1-2]/ || $4 == "P-L" || $4 == "T-1" || $4 == "T-2" || $4 == "T-3" {print $2}' cand2b.txt >> cand3.txt 2>&1 | tee -a log.txt
    echo $? 34 311 >> error.txt
    ## karifugo asteroids (2022.4.18 KS)
    awk -F" " '( $2 ~ /^[1-2]/ && $3 ~ /[A-Z][A-Z][0-9]*/ || $3 == "P-L" || $3 == "T-1" || $3 == "T-2" || $3 == "T-3" ) && $3 !~ /[A-Z][A-Z][A-Z]/ {print $2,$3}' cand2b.txt > cand4.txt 2>&1 | tee -a log.txt
    echo $? 34 312 >> error.txt

    make_asteroid_name_list_in_the_field.py 2>&1 | tee -a log.txt
fi

getinfo_numbered2D.py 2>&1 | tee -a log.txt

echo prempsearchC-before ends 2>&1 | tee -a log.txt

error_handling.py | tee -a log.txt
exit $?
